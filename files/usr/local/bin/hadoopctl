#!/bin/bash -e
#############################################################################
# A wrapper script for running the Hadoop services while ensuring that the
# environment variables are set.
#############################################################################

# Static variables
ACTION="$1"
HISTORYSERVER_PID_FILE=/tmp/hadoop-mapred-historyserver.pid
PROG=$( basename $0 )
SERVICE="$2"

function stop_historyserver() {
  if [ -f $HISTORYSERVER_PID_FILE ]; then
    pid=$( cat $HISTORYSERVER_PID_FILE )
    kill $pid
  else
    echo "ERROR: No PID file found at $HISTORYSERVER_PID_FILE"
    exit 1
  fi
}

function usage_message() {
  if [ -z "$1" ]; then
    status=2
  else
    status="$1"
  fi

  echo "usage: $PROG help"
  echo "       $PROG start datanode"
  echo "       $PROG stop datanode"
  echo "       $PROG start mapred"
  echo "       $PROG stop mapred"
  echo "       $PROG start namenode"
  echo "       $PROG stop namenode"
  echo "       $PROG start nodemanager"
  echo "       $PROG stop nodemanager"
  echo "       $PROG start resourcemanager"
  echo "       $PROG stop resourcemanager"
  exit $status
}

# Main processing starts here.
source /etc/profile.d/hadoop.sh

if [[ "$ACTION" == 'help' && $# == 1 ]]; then
  usage_message 0
elif [[ $# == 2 ]]; then
  case $ACTION in
    start) true ;;
    stop) true ;;
    *) usage_message ;;
  esac

  case $SERVICE in
    datanode) su -c "/opt/hadoop/bin/hdfs --daemon $ACTION datanode" hdfs ;;
    namenode) su -c "/opt/hadoop/bin/hdfs --daemon $ACTION namenode" hdfs ;;
    resourcemanager) su -c "/opt/hadoop/bin/yarn --daemon $ACTION resourcemanager" yarn ;;
    nodemanager) su -c "/opt/hadoop/bin/yarn --daemon $ACTION nodemanager" yarn ;;
    mapred)
      case $ACTION in
        start)
          # Ensure a directory exists for the history in HDFS
          su -c "/opt/hadoop/bin/hdfs dfs -mkdir -p /user/history" hdfs
          su -c "/opt/hadoop/bin/hdfs dfs -chmod -R 1777 /user/history" hdfs
          su -c "/opt/hadoop/bin/hdfs dfs -chown mapred:hadoop /user/history" hdfs
          su -c "/opt/hadoop/bin/mapred historyserver >> /opt/hadoop/logs/hadoop-mapred-historyserver.log 2>> /opt/hadoop/logs/hadoop-mapred-historyserver.err" mapred &
          ;;
        stop) stop_historyserver ;;
        *) usage_message ;;
      esac
      ;;
    *) usage_message ;;
  esac
else
  usage_message
fi
